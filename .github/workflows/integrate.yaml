name: CI

on:
  - push
  - pull_request

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt install python3-pip tox

    - name: Lint code
      run: tox -e lint

  unit:
    name: Unit Test
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt install python3-pip tox

    - name: Run unit tests
      run: tox -e unit

  deploy:
    name: Deploy Test
    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - uses: balchua/microk8s-actions@v0.2.2
      with:
        addons: '["dns", "storage", "rbac"]'

    - name: Install dependencies
      run: |
        set -eux
        sudo apt install python3-pip
        sudo pip3 install charmcraft==1.0.0
        sudo snap install juju --classic
        sudo snap install juju-wait --classic
        sudo snap install yq

    # Avoid race condition with storage taking a long time to initialize
    - name: Wait for storage
      run: |
        sg microk8s -c 'microk8s kubectl rollout status deployment/hostpath-provisioner -n kube-system'

    - name: Bootstrap Juju
      run: |
        set -eux
        sg microk8s -c 'juju bootstrap microk8s uk8s'
        juju add-model ci-test

    - name: Deploy charm
      run: |
        set -eux
        charmcraft build

        juju deploy ./*.charm \
          --resource oci-image=$(yq eval '.resources.oci-image.upstream-source' metadata.yaml)
        juju wait -wvt 300

    - name: Test charm
      run: |
        set -eux
        wget https://raw.githubusercontent.com/google/ml-metadata/master/ml_metadata/proto/metadata_store.proto
        wget https://raw.githubusercontent.com/google/ml-metadata/master/ml_metadata/proto/metadata_store_service.proto
        wget -O- https://github.com/fullstorydev/grpcurl/releases/download/v1.8.0/grpcurl_1.8.0_linux_x86_64.tar.gz | tar -xzv
        mkdir -p ml_metadata/proto/
        mv metadata_store.proto ml_metadata/proto/
        SERVICE=$(kubectl get services/mlmd -nci-test -oyaml | yq e .spec.clusterIP -)
        ./grpcurl -v --proto=metadata_store_service.proto --plaintext $SERVICE:8080 ml_metadata.MetadataStoreService/GetArtifacts

    - name: Get all
      run: kubectl get all -A
      if: failure()

    - name: Get juju status
      run: juju status
      if: failure()

    - name: Juju debug log
      run: juju debug-log --replay --no-tail
      if: failure()

    - name: Get workload logs
      run: kubectl logs --tail 100 -nci-test -ljuju-app
      if: failure()

    - name: Get operator logs
      run: kubectl logs --tail 100 -nci-test -ljuju-operator
      if: failure()
